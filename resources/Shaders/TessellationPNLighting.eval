#version 410 core

layout (triangles, equal_spacing, cw) in;

uniform mat4 uVP;

struct OutputPatch
{
    vec3 worldPositionB030;
    vec3 worldPositionB021;
    vec3 worldPositionB012;
    vec3 worldPositionB003;
    vec3 worldPositionB102;
    vec3 worldPositionB201;
    vec3 worldPositionB300;
    vec3 worldPositionB210;
    vec3 worldPositionB120;
    vec3 worldPositionB111;
    vec3 normal[3];
    vec2 texCoords[3];
};

patch in OutputPatch oPatch;

out vec3 worldPosition_fs_in;
out vec2 textureCoord_fs_in;
out vec3 normal_fs_in;

vec2 interpolate2D(vec2 pV0, vec2 pV1, vec2 pV2)
{
    return vec2(gl_TessCoord.x) * pV0 + vec2(gl_TessCoord.y) * pV1 + vec2(gl_TessCoord.z) * pV2;
}

vec3 interpolate3D(vec3 pV0, vec3 pV1, vec3 pV2)
{
    return vec3(gl_TessCoord.x) * pV0 + vec3(gl_TessCoord.y) * pV1 + vec3(gl_TessCoord.z) * pV2;
}

/* Tessellation evaluation shader runs on each barycentric coordinates generated by the Primitive generator */
void main()
{
    /* Interpolate the attributes of the output vertex using barycentric coordinates */
    textureCoord_fs_in = interpolate2D(oPatch.texCoords[0], oPatch.texCoords[1], oPatch.texCoords[2]);
    normal_fs_in = interpolate3D(oPatch.normal[0], oPatch.normal[1], oPatch.normal[2]);

    /* Barycentric coordinates of the point created by the Primitive generator according to the Tessellation Level */
    float u = gl_TessCoord.x;
    float v = gl_TessCoord.y;
    float w = gl_TessCoord.z;

    float uPow3 = pow(u, 3);
    float vPow3 = pow(v, 3);
    float wPow3 = pow(w, 3);
    float uPow2 = pow(u, 2);
    float vPow2 = pow(v, 2);
    float wPow2 = pow(w, 2);

    worldPosition_fs_in = oPatch.worldPositionB300 * wPow3 + oPatch.worldPositionB030 * uPow3 + oPatch.worldPositionB003 * vPow3 +
    oPatch.worldPositionB210 * 3.0f * wPow2 * u + oPatch.worldPositionB120 * 3.0f * w * uPow2 + oPatch.worldPositionB201 * 3.0f * wPow2 * v +
    oPatch.worldPositionB021 * 3.0f * uPow2 * v + oPatch.worldPositionB102 * 3.0f * w * vPow2 + oPatch.worldPositionB012 * 3.0f * u * vPow2 +
    oPatch.worldPositionB111 * 6.0f * w * u * v;

    gl_Position = uVP * vec4(worldPosition_fs_in, 1.0f);
}
